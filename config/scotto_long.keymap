#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };
&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LWR RSE>;
            then-layer = <ADJ>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I     &kp O   &kp P
                &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K     &kp L   &kp SEMI
                &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp FSLH
                &kp LALT                   &kp SPACE                        &kp RCTRL
            >;
        };

        lower_layer {
            bindings = <
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans                      &trans                             &trans
            >;
        };

        raise_layer {
            bindings = <
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans                      &trans                             &trans
            >;
        };

        adjust_layer {
            bindings = <
                &sys_reset &bootloader &studio_unlock &none &none &none &none &none &none &none
                &none      &none       &none          &none &none &none &none &none &none &none
                &none      &none       &none          &none &none &none &none &none &none &none
                &trans                                      &none                         &trans
            >;
        };
    };
};
